// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: rpc/drafto/service.proto

package drafto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Colour int32

const (
	Colour_WHITE Colour = 0
	Colour_BLUE  Colour = 1
	Colour_BLACK Colour = 2
	Colour_RED   Colour = 3
	Colour_GREEN Colour = 4
)

// Enum value maps for Colour.
var (
	Colour_name = map[int32]string{
		0: "WHITE",
		1: "BLUE",
		2: "BLACK",
		3: "RED",
		4: "GREEN",
	}
	Colour_value = map[string]int32{
		"WHITE": 0,
		"BLUE":  1,
		"BLACK": 2,
		"RED":   3,
		"GREEN": 4,
	}
)

func (x Colour) Enum() *Colour {
	p := new(Colour)
	*p = x
	return p
}

func (x Colour) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Colour) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_drafto_service_proto_enumTypes[0].Descriptor()
}

func (Colour) Type() protoreflect.EnumType {
	return &file_rpc_drafto_service_proto_enumTypes[0]
}

func (x Colour) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Colour.Descriptor instead.
func (Colour) EnumDescriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{0}
}

type Rarity int32

const (
	Rarity_BASIC    Rarity = 0
	Rarity_COMMON   Rarity = 1
	Rarity_UNCOMMON Rarity = 2
	Rarity_RARE     Rarity = 3
	Rarity_MYTHIC   Rarity = 4
)

// Enum value maps for Rarity.
var (
	Rarity_name = map[int32]string{
		0: "BASIC",
		1: "COMMON",
		2: "UNCOMMON",
		3: "RARE",
		4: "MYTHIC",
	}
	Rarity_value = map[string]int32{
		"BASIC":    0,
		"COMMON":   1,
		"UNCOMMON": 2,
		"RARE":     3,
		"MYTHIC":   4,
	}
)

func (x Rarity) Enum() *Rarity {
	p := new(Rarity)
	*p = x
	return p
}

func (x Rarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rarity) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_drafto_service_proto_enumTypes[1].Descriptor()
}

func (Rarity) Type() protoreflect.EnumType {
	return &file_rpc_drafto_service_proto_enumTypes[1]
}

func (x Rarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rarity.Descriptor instead.
func (Rarity) EnumDescriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{1}
}

type Pack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cards []*Card `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *Pack) Reset() {
	*x = Pack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pack) ProtoMessage() {}

func (x *Pack) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pack.ProtoReflect.Descriptor instead.
func (*Pack) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{0}
}

func (x *Pack) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pack) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl string   `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Colours  []Colour `protobuf:"varint,4,rep,packed,name=colours,proto3,enum=patrickwhite256.drafto.Colour" json:"colours,omitempty"`
	Rarity   Rarity   `protobuf:"varint,5,opt,name=rarity,proto3,enum=patrickwhite256.drafto.Rarity" json:"rarity,omitempty"`
	Foil     bool     `protobuf:"varint,6,opt,name=foil,proto3" json:"foil,omitempty"`
	Dfc      bool     `protobuf:"varint,7,opt,name=dfc,proto3" json:"dfc,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Card) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Card) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Card) GetColours() []Colour {
	if x != nil {
		return x.Colours
	}
	return nil
}

func (x *Card) GetRarity() Rarity {
	if x != nil {
		return x.Rarity
	}
	return Rarity_BASIC
}

func (x *Card) GetFoil() bool {
	if x != nil {
		return x.Foil
	}
	return false
}

func (x *Card) GetDfc() bool {
	if x != nil {
		return x.Dfc
	}
	return false
}

type NewDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetCode string `protobuf:"bytes,1,opt,name=set_code,json=setCode,proto3" json:"set_code,omitempty"`
}

func (x *NewDraftReq) Reset() {
	*x = NewDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDraftReq) ProtoMessage() {}

func (x *NewDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDraftReq.ProtoReflect.Descriptor instead.
func (*NewDraftReq) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{2}
}

func (x *NewDraftReq) GetSetCode() string {
	if x != nil {
		return x.SetCode
	}
	return ""
}

type NewDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string   `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	SeatIds []string `protobuf:"bytes,2,rep,name=seat_ids,json=seatIds,proto3" json:"seat_ids,omitempty"`
}

func (x *NewDraftResp) Reset() {
	*x = NewDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDraftResp) ProtoMessage() {}

func (x *NewDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDraftResp.ProtoReflect.Descriptor instead.
func (*NewDraftResp) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{3}
}

func (x *NewDraftResp) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *NewDraftResp) GetSeatIds() []string {
	if x != nil {
		return x.SeatIds
	}
	return nil
}

type GetSeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId string `protobuf:"bytes,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
}

func (x *GetSeatReq) Reset() {
	*x = GetSeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatReq) ProtoMessage() {}

func (x *GetSeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatReq.ProtoReflect.Descriptor instead.
func (*GetSeatReq) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetSeatReq) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

type GetSeatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId      string  `protobuf:"bytes,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	TableId     string  `protobuf:"bytes,2,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	CurrentPack *Pack   `protobuf:"bytes,3,opt,name=current_pack,json=currentPack,proto3" json:"current_pack,omitempty"`
	Pool        []*Card `protobuf:"bytes,4,rep,name=pool,proto3" json:"pool,omitempty"`
}

func (x *GetSeatResp) Reset() {
	*x = GetSeatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatResp) ProtoMessage() {}

func (x *GetSeatResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatResp.ProtoReflect.Descriptor instead.
func (*GetSeatResp) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetSeatResp) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

func (x *GetSeatResp) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *GetSeatResp) GetCurrentPack() *Pack {
	if x != nil {
		return x.CurrentPack
	}
	return nil
}

func (x *GetSeatResp) GetPool() []*Card {
	if x != nil {
		return x.Pool
	}
	return nil
}

type MakeSelectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId string `protobuf:"bytes,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	CardId string `protobuf:"bytes,2,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
}

func (x *MakeSelectionReq) Reset() {
	*x = MakeSelectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeSelectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeSelectionReq) ProtoMessage() {}

func (x *MakeSelectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeSelectionReq.ProtoReflect.Descriptor instead.
func (*MakeSelectionReq) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{6}
}

func (x *MakeSelectionReq) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

func (x *MakeSelectionReq) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

type MakeSelectionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId string `protobuf:"bytes,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
}

func (x *MakeSelectionResp) Reset() {
	*x = MakeSelectionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeSelectionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeSelectionResp) ProtoMessage() {}

func (x *MakeSelectionResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeSelectionResp.ProtoReflect.Descriptor instead.
func (*MakeSelectionResp) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{7}
}

func (x *MakeSelectionResp) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

type GetDraftStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
}

func (x *GetDraftStatusReq) Reset() {
	*x = GetDraftStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDraftStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftStatusReq) ProtoMessage() {}

func (x *GetDraftStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftStatusReq.ProtoReflect.Descriptor instead.
func (*GetDraftStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetDraftStatusReq) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type GetDraftStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId     string      `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	CurrentPack int32       `protobuf:"varint,2,opt,name=current_pack,json=currentPack,proto3" json:"current_pack,omitempty"`
	Seats       []*SeatData `protobuf:"bytes,3,rep,name=seats,proto3" json:"seats,omitempty"`
}

func (x *GetDraftStatusResp) Reset() {
	*x = GetDraftStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDraftStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftStatusResp) ProtoMessage() {}

func (x *GetDraftStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftStatusResp.ProtoReflect.Descriptor instead.
func (*GetDraftStatusResp) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetDraftStatusResp) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *GetDraftStatusResp) GetCurrentPack() int32 {
	if x != nil {
		return x.CurrentPack
	}
	return 0
}

func (x *GetDraftStatusResp) GetSeats() []*SeatData {
	if x != nil {
		return x.Seats
	}
	return nil
}

type SeatData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId            string  `protobuf:"bytes,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
	PackCount         int32   `protobuf:"varint,2,opt,name=pack_count,json=packCount,proto3" json:"pack_count,omitempty"`
	PoolCount         int32   `protobuf:"varint,3,opt,name=pool_count,json=poolCount,proto3" json:"pool_count,omitempty"`
	PoolRevealedCards []*Card `protobuf:"bytes,4,rep,name=pool_revealed_cards,json=poolRevealedCards,proto3" json:"pool_revealed_cards,omitempty"`
	PackRevealedCards []*Card `protobuf:"bytes,5,rep,name=pack_revealed_cards,json=packRevealedCards,proto3" json:"pack_revealed_cards,omitempty"`
	CurrentPackCount  int32   `protobuf:"varint,6,opt,name=current_pack_count,json=currentPackCount,proto3" json:"current_pack_count,omitempty"`
}

func (x *SeatData) Reset() {
	*x = SeatData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_drafto_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeatData) ProtoMessage() {}

func (x *SeatData) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_drafto_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeatData.ProtoReflect.Descriptor instead.
func (*SeatData) Descriptor() ([]byte, []int) {
	return file_rpc_drafto_service_proto_rawDescGZIP(), []int{10}
}

func (x *SeatData) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

func (x *SeatData) GetPackCount() int32 {
	if x != nil {
		return x.PackCount
	}
	return 0
}

func (x *SeatData) GetPoolCount() int32 {
	if x != nil {
		return x.PoolCount
	}
	return 0
}

func (x *SeatData) GetPoolRevealedCards() []*Card {
	if x != nil {
		return x.PoolRevealedCards
	}
	return nil
}

func (x *SeatData) GetPackRevealedCards() []*Card {
	if x != nil {
		return x.PackRevealedCards
	}
	return nil
}

func (x *SeatData) GetCurrentPackCount() int32 {
	if x != nil {
		return x.CurrentPackCount
	}
	return 0
}

var File_rpc_drafto_service_proto protoreflect.FileDescriptor

var file_rpc_drafto_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x61, 0x74, 0x72,
	0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x04, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x74, 0x72,
	0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0xdf,
	0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6f,
	0x75, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x61, 0x74, 0x72,
	0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6f, 0x75,
	0x72, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6f,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x6f, 0x69, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x66, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x66, 0x63,
	0x22, 0x28, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x0c, 0x4e, 0x65,
	0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x25, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x04,
	0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x74,
	0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x22, 0x44,
	0x0a, 0x10, 0x4d, 0x61, 0x6b, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x11, 0x4d, 0x61, 0x6b, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74,
	0x49, 0x64, 0x22, 0x2e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x22,
	0xab, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x76, 0x65,
	0x61, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32,
	0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x11,
	0x70, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x4c, 0x0a, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c,
	0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36,
	0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x11, 0x70, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x3c, 0x0a,
	0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x48, 0x49, 0x54, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x04, 0x2a, 0x43, 0x0a, 0x06, 0x52,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41,
	0x52, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x59, 0x54, 0x48, 0x49, 0x43, 0x10, 0x04,
	0x32, 0x82, 0x03, 0x0a, 0x06, 0x44, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x12, 0x55, 0x0a, 0x08, 0x4e,
	0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63,
	0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f,
	0x2e, 0x4e, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70,
	0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x44, 0x72, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x52, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x12, 0x22, 0x2e,
	0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x0d, 0x4d, 0x61, 0x6b, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63,
	0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f,
	0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29,
	0x2e, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36,
	0x2e, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70, 0x61, 0x74, 0x72,
	0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x64, 0x72, 0x61, 0x66,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x74, 0x72, 0x69, 0x63, 0x6b, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x32, 0x35, 0x36, 0x2f, 0x64, 0x72, 0x61, 0x66, 0x74, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_drafto_service_proto_rawDescOnce sync.Once
	file_rpc_drafto_service_proto_rawDescData = file_rpc_drafto_service_proto_rawDesc
)

func file_rpc_drafto_service_proto_rawDescGZIP() []byte {
	file_rpc_drafto_service_proto_rawDescOnce.Do(func() {
		file_rpc_drafto_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_drafto_service_proto_rawDescData)
	})
	return file_rpc_drafto_service_proto_rawDescData
}

var file_rpc_drafto_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_rpc_drafto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_rpc_drafto_service_proto_goTypes = []interface{}{
	(Colour)(0),                // 0: patrickwhite256.drafto.Colour
	(Rarity)(0),                // 1: patrickwhite256.drafto.Rarity
	(*Pack)(nil),               // 2: patrickwhite256.drafto.Pack
	(*Card)(nil),               // 3: patrickwhite256.drafto.Card
	(*NewDraftReq)(nil),        // 4: patrickwhite256.drafto.NewDraftReq
	(*NewDraftResp)(nil),       // 5: patrickwhite256.drafto.NewDraftResp
	(*GetSeatReq)(nil),         // 6: patrickwhite256.drafto.GetSeatReq
	(*GetSeatResp)(nil),        // 7: patrickwhite256.drafto.GetSeatResp
	(*MakeSelectionReq)(nil),   // 8: patrickwhite256.drafto.MakeSelectionReq
	(*MakeSelectionResp)(nil),  // 9: patrickwhite256.drafto.MakeSelectionResp
	(*GetDraftStatusReq)(nil),  // 10: patrickwhite256.drafto.GetDraftStatusReq
	(*GetDraftStatusResp)(nil), // 11: patrickwhite256.drafto.GetDraftStatusResp
	(*SeatData)(nil),           // 12: patrickwhite256.drafto.SeatData
}
var file_rpc_drafto_service_proto_depIdxs = []int32{
	3,  // 0: patrickwhite256.drafto.Pack.cards:type_name -> patrickwhite256.drafto.Card
	0,  // 1: patrickwhite256.drafto.Card.colours:type_name -> patrickwhite256.drafto.Colour
	1,  // 2: patrickwhite256.drafto.Card.rarity:type_name -> patrickwhite256.drafto.Rarity
	2,  // 3: patrickwhite256.drafto.GetSeatResp.current_pack:type_name -> patrickwhite256.drafto.Pack
	3,  // 4: patrickwhite256.drafto.GetSeatResp.pool:type_name -> patrickwhite256.drafto.Card
	12, // 5: patrickwhite256.drafto.GetDraftStatusResp.seats:type_name -> patrickwhite256.drafto.SeatData
	3,  // 6: patrickwhite256.drafto.SeatData.pool_revealed_cards:type_name -> patrickwhite256.drafto.Card
	3,  // 7: patrickwhite256.drafto.SeatData.pack_revealed_cards:type_name -> patrickwhite256.drafto.Card
	4,  // 8: patrickwhite256.drafto.Drafto.NewDraft:input_type -> patrickwhite256.drafto.NewDraftReq
	6,  // 9: patrickwhite256.drafto.Drafto.GetSeat:input_type -> patrickwhite256.drafto.GetSeatReq
	8,  // 10: patrickwhite256.drafto.Drafto.MakeSelection:input_type -> patrickwhite256.drafto.MakeSelectionReq
	10, // 11: patrickwhite256.drafto.Drafto.GetDraftStatus:input_type -> patrickwhite256.drafto.GetDraftStatusReq
	5,  // 12: patrickwhite256.drafto.Drafto.NewDraft:output_type -> patrickwhite256.drafto.NewDraftResp
	7,  // 13: patrickwhite256.drafto.Drafto.GetSeat:output_type -> patrickwhite256.drafto.GetSeatResp
	9,  // 14: patrickwhite256.drafto.Drafto.MakeSelection:output_type -> patrickwhite256.drafto.MakeSelectionResp
	11, // 15: patrickwhite256.drafto.Drafto.GetDraftStatus:output_type -> patrickwhite256.drafto.GetDraftStatusResp
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_rpc_drafto_service_proto_init() }
func file_rpc_drafto_service_proto_init() {
	if File_rpc_drafto_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_drafto_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSeatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeSelectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeSelectionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDraftStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDraftStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_drafto_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeatData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_drafto_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_drafto_service_proto_goTypes,
		DependencyIndexes: file_rpc_drafto_service_proto_depIdxs,
		EnumInfos:         file_rpc_drafto_service_proto_enumTypes,
		MessageInfos:      file_rpc_drafto_service_proto_msgTypes,
	}.Build()
	File_rpc_drafto_service_proto = out.File
	file_rpc_drafto_service_proto_rawDesc = nil
	file_rpc_drafto_service_proto_goTypes = nil
	file_rpc_drafto_service_proto_depIdxs = nil
}
